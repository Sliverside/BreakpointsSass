@import '../utilities/functions';
@import '../breakpointsSass';

*,
*::before,
*::after {
  box-sizing: border-box;
}

body {
  margin: 0;
}
.col {
  font-size: 0;
  line-height: 0;
  > div {
    position: relative;
    display: inline-block;
    width: #{(100% / 3)};
    min-height: 100vh;
    border-left: 1px solid #999;
    border-right: 1px solid #999;
  }
}

$grospoints: ( '#name#': 'grospoints',
  '#default#': (
    'size':(
    ('value': 150px, 'min': 1000px),
    ('value': 50px, 'min': 800px, 'max': 1000px),
    ('value': 25px, 'max': 800px),
    ),
    'radius': (
      ('value': 800px),
      ('value': 0px, 'max': 1000px, 'min': 800px),
      ('value': 10px, 'min': 1200px),
    ),
    'color': red,
  ),
  'bleu': (
    'size': 120px,
    'radius': 100px,
    'color': hsl(210, 100%, 55%),
  ),
  'violet': (
    'size': 140px,
    'radius': 100px,
    'color': hsl(282, 62%, 39%),
  ),
);
$BPS: add-bp-vars($grospoints);
@each $name, $grospoint in get($BPS, 'grospoints') {
  $this: $grospoint !global;
  $name: if($name == "#default#", '.grospoint', '.grospoint.grospoint__' + $name);
  #{$name} {
    @each $bp in $grospoint{
      $this: get($bp, 'breakpoint') !global;
      @include BPS(this('max'), this('min')) {
        $this: $bp !global;
        @if thisbp('color') {background-color: thisbp('color');}
        @if thisbp('radius') {border-radius: thisbp('radius');}
        @if thisbp('size') {
          width: thisbp('size');
          height: thisbp('size');
        }
      }
    }
  }
}

.grospoint {
  position: absolute;
  bottom: 50%;
  right: 50%;
  transform: translate(50%, 50%);
}
