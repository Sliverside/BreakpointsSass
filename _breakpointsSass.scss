@import 'utilities/functions';

$BPS: () !global;

// | 1.breakpoint =========================================================== \\

  @mixin BPS($max, $min: false) {

    @if $max == false {
      @if $min != false {@media (min-width: $min) {@content;}}
      @else {@content;}
    }
    @else if $min == false {
      @media (max-width: $min) {@content;}
    }
    @else {@media (max-width: $min) and (min-width: $min) {@content;}}

  }

// | 2.add breakpoints vars (loop) ========================================== \\

@function add-bp-vars-loop($breakpoints, $new, $var-name) {
  $new: map-merge(('max-width':  false, 'min-width': false), $new);
  $value: map-get($new, 'value');
  $new-breakpoint: delete($new, 'value');
  $finded: false;
  $temp: ();
  $values: ();
  @each $breakpoint in $breakpoints {
    @if type-of($breakpoint) == list {@error $breakpoints;}
    @if map-get($breakpoint, 'breakpoint') == $new-breakpoint {
      $finded: true;
      $breakpoint: map-merge($breakpoint, ('values': (set(get($breakpoint, 'values'), $var-name, $value))));
    }
    $temp: append($temp, $breakpoint);
  }
  @if $finded {
    $breakpoints: $temp;
  }@else {
    $breakpoints: append($breakpoints, ('breakpoint': $new-breakpoint, 'values': ($var-name: $value)));
  }
  @return $breakpoints;
}

// | 3.add breakpoints vars ================================================= \\

@function add-bp-vars($map) {
  $name: get($map '#name#');
  $map: delete($map, ('#name#'));
  $breakpoints: ();
  @each $var-name, $properties in $map {
    @if type-of($properties) == map { // if there is only one breakpoint
      $breakpoints: add-bp-vars-loop($breakpoints, $properties, $var-name);
    }@else if type-of($properties) == list { // if there is various one breakpoint
      @each $breakpoint in $properties { // if there is no breakpoit
        $breakpoints: add-bp-vars-loop($breakpoints,  $breakpoint, $var-name);
      }
    }@else {
      $breakpoints: add-bp-vars-loop($breakpoints, ('value': $properties,), $var-name);
    }
  }
  @return set($BPS, $name, $breakpoints);
}
